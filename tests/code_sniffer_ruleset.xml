<?xml version="1.0"?>
<ruleset name="phpseclib Standard">

 <description>phpseclib coding standard</description>

 <!-- We are using the PEAR standard as a base -->
 <rule ref="PEAR"/>

 <!-- Temporary exceptions to the PEAR standard follow -->

 <rule ref="Generic.ControlStructures.InlineControlStructure.Discouraged"><severity>0</severity></rule>
 <rule ref="Generic.Files.LineLength.TooLong"><severity>0</severity></rule>
 <rule ref="PEAR.NamingConventions.ValidFunctionName.FunctionNoCapital"><severity>0</severity></rule>
 <rule ref="PEAR.NamingConventions.ValidFunctionName.NotCamelCaps"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.ClassComment.InvalidVersion"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.ClassComment.MissingTag"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.ClassComment.WrongTagOrder"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FileComment.EmptyCopyright"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FileComment.InvalidVersion"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FileComment.TagIndent"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.ExtraParamComment"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.MissingReturn"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.MissingParamComment"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.MissingParamName"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.MissingParamTag"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.ParameterCommentsNotAligned"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.ParameterNamesNotAligned"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.ParamNameNoMatch"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.SpacingAfterParams"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeParams"><severity>0</severity></rule>
 <rule ref="PEAR.Commenting.FunctionComment.SpacingBeforeTags"><severity>0</severity></rule>
 <rule ref="PEAR.Formatting.MultiLineAssignment.EqualSignLine"><severity>0</severity></rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"><severity>0</severity></rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.CloseBracketLine"><severity>0</severity></rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.Indent"><severity>0</severity></rule>
 <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket"><severity>0</severity></rule>
 <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.BreakIdent"><severity>0</severity></rule>
 <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.Indent"><severity>0</severity></rule>
 <rule ref="PEAR.WhiteSpace.ScopeClosingBrace.Line"><severity>0</severity></rule>
 <rule ref="PEAR.WhiteSpace.ScopeIndent.Incorrect"><severity>0</severity></rule>

 <!-- Useful additional rules follow -->

 <!-- "for (; bar; )" should be "while (bar)" instead -->
 <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop" />

 <!-- A method MUST not only call its parent -->
 <rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />

 <!-- All code files MUST use only UTF-8 without BOM. -->
 <rule ref="Generic.Files.ByteOrderMark" />

 <!-- In the argument list, there MUST NOT be a space before each comma,
      and there MUST be one space after each comma. -->
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
  <properties>
   <property name="equalsSpacing" value="1"/>
  </properties>
 </rule>
 <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterHint" />

 <!-- The ?> closing tag MUST be omitted from files containing only PHP. -->
 <rule ref="Zend.Files.ClosingTag" />

</ruleset>
